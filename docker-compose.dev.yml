
# Docker Compose para Desenvolvimento - BestStag v9.1
# Sobrescreve configurações para ambiente de desenvolvimento

version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      target: development  # Se tivermos multi-stage build
    volumes:
      - ./src/backend:/app/src/backend:ro
      - ./config:/app/config:ro
      - ./logs:/app/logs
      - ./tests:/app/tests:ro
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - HOT_RELOAD=true
      - LOG_LEVEL=DEBUG
    command: uvicorn src.backend.app:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
      - "5678:5678"  # Debug port

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: development
    volumes:
      - ./src/frontend:/app:ro
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:8000
    command: npm start
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true

  # Adicionar serviços de desenvolvimento
  mailhog:
    image: mailhog/mailhog:latest
    container_name: beststag-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - beststag-network

  # Adminer para gerenciar banco
  adminer:
    image: adminer:latest
    container_name: beststag-adminer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    networks:
      - beststag-network
    depends_on:
      - postgres

  # Redis Commander
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: beststag-redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    networks:
      - beststag-network
    depends_on:
      - redis
